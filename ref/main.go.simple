package main

import (
    "encoding/json"
    "fmt"
    "net/http"
    "os/exec"
    "strings"
)

func main() {
    // Handle the /check endpoint to return a simple JSON status
    http.HandleFunc("/check", func(w http.ResponseWriter, r *http.Request) {
        response := map[string]string{"status": "ok"}
        w.Header().Set("Content-Type", "application/json")
        json.NewEncoder(w).Encode(response)
    })

    // Handle the /check/disks endpoint to check for EXT4 devices in read-only mode
    http.HandleFunc("/check/disks", func(w http.ResponseWriter, r *http.Request) {
        cmd := exec.Command("mount")
        output, err := cmd.Output()
        if err != nil {
            http.Error(w, fmt.Sprintf("Error executing mount command: %v\n", err), http.StatusInternalServerError)
            return
        }

        lines := strings.Split(string(output), "\n")
        var results []string

        for _, line := range lines {
            if strings.Contains(line, "type ext4") && strings.Contains(line, "ro,") {
                results = append(results, line)
            }
        }

        response := strings.Join(results, "\n")
        fmt.Fprintln(w, response)
    })

    // Start the HTTP server on port 8080
    fmt.Println("Starting server on :8080")
    http.ListenAndServe(":8080", nil)
}